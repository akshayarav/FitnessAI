{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/BarAI/frontend/src/components/Selections/menus/GenerateMenu.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { AiOutlineReload } from 'react-icons/ai';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateMenu = () => {\n  _s();\n  const [isSending, setIsSending] = useState(false);\n  const isMounted = useRef(true);\n\n  // set isMounted to false when we unmount the component\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  const sendRequest = useCallback(async () => {\n    // don't send again while we are sending\n    if (isSending) return;\n    // update state\n    setIsSending(true);\n    // send the actual request\n    await API.sendRequest();\n    // once the request is sent, update state again\n    if (isMounted.current)\n      // only update if we are still mounted\n      setIsSending(false);\n  }, [isSending]); // update the callback if the state changes\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success\",\n    children: [\"Generate \", /*#__PURE__*/_jsxDEV(AiOutlineReload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerateMenu, \"Y/w8pj4e8IPTJocd5Ju1thnI4nQ=\");\n_c = GenerateMenu;\nexport default GenerateMenu;\nvar _c;\n$RefreshReg$(_c, \"GenerateMenu\");","map":{"version":3,"names":["React","AiOutlineReload","useState","useEffect","jsxDEV","_jsxDEV","GenerateMenu","_s","isSending","setIsSending","isMounted","useRef","current","sendRequest","useCallback","API","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/BarAI/frontend/src/components/Selections/menus/GenerateMenu.js"],"sourcesContent":["import React from 'react';\nimport {AiOutlineReload} from 'react-icons/ai';\nimport {useState, useEffect} from 'react'\n\nconst GenerateMenu =() => {\n    const [isSending, setIsSending] = useState(false)\n    const isMounted = useRef(true)\n  \n    // set isMounted to false when we unmount the component\n    useEffect(() => {\n      return () => {\n        isMounted.current = false\n      }\n    }, [])\n  \n    const sendRequest = useCallback(async () => {\n      // don't send again while we are sending\n      if (isSending) return\n      // update state\n      setIsSending(true)\n      // send the actual request\n      await API.sendRequest()\n      // once the request is sent, update state again\n      if (isMounted.current) // only update if we are still mounted\n        setIsSending(false)\n    }, [isSending]) // update the callback if the state changes\n\n    return (\n        <button type=\"button\" className=\"btn btn-success\">\n            Generate <AiOutlineReload />\n        </button>\n    )\n}\nexport default GenerateMenu"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,eAAe,QAAO,gBAAgB;AAC9C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAEA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACAR,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXO,SAAS,CAACE,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGC,WAAW,CAAC,YAAY;IAC1C;IACA,IAAIN,SAAS,EAAE;IACf;IACAC,YAAY,CAAC,IAAI,CAAC;IAClB;IACA,MAAMM,GAAG,CAACF,WAAW,CAAC,CAAC;IACvB;IACA,IAAIH,SAAS,CAACE,OAAO;MAAE;MACrBH,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC,EAAC;;EAEhB,oBACIH,OAAA;IAAQW,IAAI,EAAC,QAAQ;IAACC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,GAAC,WACrC,eAAAb,OAAA,CAACJ,eAAe;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEjB,CAAC;AAAAf,EAAA,CA5BKD,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA6BlB,eAAeA,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}