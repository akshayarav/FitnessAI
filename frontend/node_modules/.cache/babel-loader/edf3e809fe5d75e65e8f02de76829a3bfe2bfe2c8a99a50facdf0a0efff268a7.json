{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/Projects/FitnessAI/frontend/src/components/Selections/menus/output.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = process.env.REACT_APP_URL;\nexport default function Output() {\n  _s();\n  const [output, setOutput] = useState(null);\n  const fetchOutputs = async () => {\n    try {\n      const response = await axios.get(baseURL);\n      const outputData = JSON.parse(response.data.data[response.data.data.length - 1].body);\n      setOutput(outputData);\n      console.log(outputData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (output) var split = JSON.stringify(output.plan.split);\n  useEffect(() => {\n    fetchOutputs();\n  }, []);\n  if (!output) return null; // render nothing if output is not available yet\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"plan\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"planGoal\",\n      children: [\"Goal: $\", output.plan.goal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"planSplit\",\n      children: Object.entries(plan.split).map((_ref, index) => {\n        let [day, activity] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [day, \": \", activity]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"planExercise\",\n        children: [\"Exercise Selection: $\", output.plan.exercise_selection]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Output, \"Dy9F/UZmKEOsf538zsUjQxtQfco=\");\n_c = Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","baseURL","process","env","REACT_APP_URL","Output","_s","output","setOutput","fetchOutputs","response","get","outputData","JSON","parse","data","length","body","console","log","error","split","stringify","plan","class","children","id","goal","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","_ref","index","day","activity","exercise_selection","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/Projects/FitnessAI/frontend/src/components/Selections/menus/output.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst baseURL = process.env.REACT_APP_URL\n\nexport default function Output() {\n  const [output, setOutput] = useState(null)\n\n  const fetchOutputs = async () => {\n    try {\n      const response = await axios.get(baseURL)\n      const outputData = JSON.parse(response.data.data[response.data.data.length - 1].body)\n      setOutput(outputData)\n      console.log(outputData)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  if (output)  var split = JSON.stringify(output.plan.split)\n  useEffect(() => {\n    fetchOutputs()\n  }, [])\n\n  if (!output) return null  // render nothing if output is not available yet\n  \n  \n\n  return (\n    <div class=\"plan\">\n        <h1 id=\"planGoal\">\n        Goal: ${output.plan.goal}\n        </h1>\n        <div id=\"planSplit\">\n          {Object.entries(plan.split).map(([day, activity], index) => (\n                    <p key={index}>{day}: {activity}</p>\n                ))}\n        </div> \n        <div>\n        <p id=\"planExercise\">\n        Exercise Selection: ${output.plan.exercise_selection}\n        </p>\n        </div>\n\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa;AAEzC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACV,OAAO,CAAC;MACzC,MAAMW,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAACA,IAAI,CAACL,QAAQ,CAACK,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC;MACrFT,SAAS,CAACI,UAAU,CAAC;MACrBM,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;IACzB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;EACD,IAAIb,MAAM,EAAG,IAAIc,KAAK,GAAGR,IAAI,CAACS,SAAS,CAACf,MAAM,CAACgB,IAAI,CAACF,KAAK,CAAC;EAC1DzB,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,MAAM,EAAE,OAAO,IAAI,EAAE;;EAI1B,oBACEP,OAAA;IAAKwB,KAAK,EAAC,MAAM;IAAAC,QAAA,gBACbzB,OAAA;MAAI0B,EAAE,EAAC,UAAU;MAAAD,QAAA,GAAC,SACX,EAAClB,MAAM,CAACgB,IAAI,CAACI,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACL/B,OAAA;MAAK0B,EAAE,EAAC,WAAW;MAAAD,QAAA,EAChBO,MAAM,CAACC,OAAO,CAACV,IAAI,CAACF,KAAK,CAAC,CAACa,GAAG,CAAC,CAAAC,IAAA,EAAkBC,KAAK;QAAA,IAAtB,CAACC,GAAG,EAAEC,QAAQ,CAAC,GAAAH,IAAA;QAAA,oBACtCnC,OAAA;UAAAyB,QAAA,GAAgBY,GAAG,EAAC,IAAE,EAACC,QAAQ;QAAA,GAAvBF,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsB,CAAC;MAAA,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN/B,OAAA;MAAAyB,QAAA,eACAzB,OAAA;QAAG0B,EAAE,EAAC,cAAc;QAAAD,QAAA,GAAC,uBACA,EAAClB,MAAM,CAACgB,IAAI,CAACgB,kBAAkB;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV;AAACzB,EAAA,CAxCuBD,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}