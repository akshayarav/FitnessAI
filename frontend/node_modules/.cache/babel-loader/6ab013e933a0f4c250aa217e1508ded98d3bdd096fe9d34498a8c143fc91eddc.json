{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/Projects/FitnessAI/frontend/src/components/Selections/menus/Output/output.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = process.env.REACT_APP_URL;\nexport const fetchOutputs = async id => {\n  try {\n    const response = await axios.get(baseURL);\n    const outputData = JSON.parse(response.data.data[response.data.data.length - 1].body);\n    setOutput(outputData);\n    console.log(outputData.plan.id);\n  } catch (error) {\n    console.log(error);\n  }\n};\nuseEffect(() => {\n  setOutput(null);\n  fetchOutputs();\n  const intervalId = setInterval(fetchOutputs, 5000); // Fetch data every 5 seconds\n\n  return () => {\n    clearInterval(intervalId); // Clean up interval on unmount\n  };\n}, []);\nexport default function Output() {\n  _s();\n  const [output, setOutput] = useState(null);\n  if (!output) return null; // render nothing if output is not available yet\n\n  const plan = output.plan;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Goal: \", plan.goal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Split:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), Object.entries(plan.split).map((_ref, index) => {\n      let [day, activity] = _ref;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [day, \": \", activity]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Exercise Selection: \", plan.exercise_selection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(Output, \"ppWByPgNJ+PeYTAdgwjKOSbvJUE=\");\n_c = Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","baseURL","process","env","REACT_APP_URL","fetchOutputs","id","response","get","outputData","JSON","parse","data","length","body","setOutput","console","log","plan","error","intervalId","setInterval","clearInterval","Output","_s","output","className","children","goal","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","split","map","_ref","index","day","activity","exercise_selection","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/Projects/FitnessAI/frontend/src/components/Selections/menus/Output/output.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst baseURL = process.env.REACT_APP_URL\n\nexport const fetchOutputs = async (id) => {\n  try {\n    const response = await axios.get(baseURL)\n    const outputData = JSON.parse(response.data.data[response.data.data.length - 1].body)\n    setOutput(outputData)\n    console.log(outputData.plan.id)\n  } catch (error) {\n    console.log(error)\n  }\n}\nuseEffect(() => {\n  setOutput(null)\n  fetchOutputs()\n  const intervalId = setInterval(fetchOutputs, 5000); // Fetch data every 5 seconds\n\n  return () => {\n    clearInterval(intervalId); // Clean up interval on unmount\n  };\n}, [])\n\n\nexport default function Output() {\n  const [output, setOutput] = useState(null)\n\n  if (!output) return null  // render nothing if output is not available yet\n  \n\n  const plan = output.plan;\n\n  return (\n      <div className=\"plan\">\n          <h1>Goal: {plan.goal}</h1>\n          <h2>Split:</h2>\n          {Object.entries(plan.split).map(([day, activity], index) => (\n              <p key={index}>{day}: {activity}</p>\n          ))}\n          <p>Exercise Selection: {plan.exercise_selection}</p>\n      </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa;AAEzC,OAAO,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACP,OAAO,CAAC;IACzC,MAAMQ,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAACA,IAAI,CAACL,QAAQ,CAACK,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC;IACrFC,SAAS,CAACN,UAAU,CAAC;IACrBO,OAAO,CAACC,GAAG,CAACR,UAAU,CAACS,IAAI,CAACZ,EAAE,CAAC;EACjC,CAAC,CAAC,OAAOa,KAAK,EAAE;IACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACpB;AACF,CAAC;AACDvB,SAAS,CAAC,MAAM;EACdmB,SAAS,CAAC,IAAI,CAAC;EACfV,YAAY,CAAC,CAAC;EACd,MAAMe,UAAU,GAAGC,WAAW,CAAChB,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;;EAEpD,OAAO,MAAM;IACXiB,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC7B,CAAC;AACH,CAAC,EAAE,EAAE,CAAC;AAGN,eAAe,SAASG,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEV,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE1C,IAAI,CAAC4B,MAAM,EAAE,OAAO,IAAI,EAAE;;EAG1B,MAAMP,IAAI,GAAGO,MAAM,CAACP,IAAI;EAExB,oBACIlB,OAAA;IAAK0B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjB3B,OAAA;MAAA2B,QAAA,GAAI,QAAM,EAACT,IAAI,CAACU,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1BhC,OAAA;MAAA2B,QAAA,EAAI;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdC,MAAM,CAACC,OAAO,CAAChB,IAAI,CAACiB,KAAK,CAAC,CAACC,GAAG,CAAC,CAAAC,IAAA,EAAkBC,KAAK;MAAA,IAAtB,CAACC,GAAG,EAAEC,QAAQ,CAAC,GAAAH,IAAA;MAAA,oBAC5CrC,OAAA;QAAA2B,QAAA,GAAgBY,GAAG,EAAC,IAAE,EAACC,QAAQ;MAAA,GAAvBF,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAAC;IAAA,CACvC,CAAC,eACFhC,OAAA;MAAA2B,QAAA,GAAG,sBAAoB,EAACT,IAAI,CAACuB,kBAAkB;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEZ;AAACR,EAAA,CAlBuBD,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}