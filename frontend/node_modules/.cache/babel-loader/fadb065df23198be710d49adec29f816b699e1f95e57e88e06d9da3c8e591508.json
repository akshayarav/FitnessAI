{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Documents/BarAI/frontend/src/components/Selections/menus/GenerateMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { AiOutlineReload } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateMenu = () => {\n  _s();\n  function Post() {\n    fetch(\"http://localhost:8000/post\", {\n      method: \"POST\",\n      headers: {\n        \"liquor\": \"mixer\"\n      }\n    });\n  }\n  const [isSending, setIsSending] = useState(false);\n  const isMounted = useRef(true);\n\n  // set isMounted to false when we unmount the component\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  const sendRequest = useCallback(async () => {\n    if (isSending) return;\n    setIsSending(true);\n    await Post();\n    if (isMounted.current) setIsSending(false);\n  }, [isSending]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success\",\n    disabled: isSending,\n    onClick: sendRequest,\n    children: [\"Generate \", /*#__PURE__*/_jsxDEV(AiOutlineReload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerateMenu, \"Y/w8pj4e8IPTJocd5Ju1thnI4nQ=\");\n_c = GenerateMenu;\nexport default GenerateMenu;\nvar _c;\n$RefreshReg$(_c, \"GenerateMenu\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","AiOutlineReload","jsxDEV","_jsxDEV","GenerateMenu","_s","Post","fetch","method","headers","isSending","setIsSending","isMounted","current","sendRequest","type","className","disabled","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshay/Documents/BarAI/frontend/src/components/Selections/menus/GenerateMenu.js"],"sourcesContent":["import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport {AiOutlineReload} from 'react-icons/ai';\n\n\n\nconst GenerateMenu =() => {\n    function Post() {\n      fetch(\"http://localhost:8000/post\", {\n        method: \"POST\",\n        headers: { \"liquor\": \"mixer\"},\n      })\n    }\n    const [isSending, setIsSending] = useState(false)\n    const isMounted = useRef(true)\n  \n    // set isMounted to false when we unmount the component\n    useEffect(() => {\n      return () => {\n        isMounted.current = false\n      }\n    }, [])\n    \n    const sendRequest = useCallback(async () => {\n      if (isSending) return\n      setIsSending(true)\n      await Post()\n      if (isMounted.current) \n        setIsSending(false)\n    }, [isSending]) \n\n    return (\n        <button type=\"button\" className=\"btn btn-success\" disabled={isSending} onClick={sendRequest}>\n            Generate <AiOutlineReload />\n        </button>\n    )\n}\nexport default GenerateMenu"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAO,OAAO;AACrE,SAAQC,eAAe,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,MAAMC,YAAY,GAAEA,CAAA,KAAM;EAAAC,EAAA;EACtB,SAASC,IAAIA,CAAA,EAAG;IACdC,KAAK,CAAC,4BAA4B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,QAAQ,EAAE;MAAO;IAC9B,CAAC,CAAC;EACJ;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXc,SAAS,CAACC,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGd,WAAW,CAAC,YAAY;IAC1C,IAAIU,SAAS,EAAE;IACfC,YAAY,CAAC,IAAI,CAAC;IAClB,MAAML,IAAI,CAAC,CAAC;IACZ,IAAIM,SAAS,CAACC,OAAO,EACnBF,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EAEf,oBACIP,OAAA;IAAQY,IAAI,EAAC,QAAQ;IAACC,SAAS,EAAC,iBAAiB;IAACC,QAAQ,EAAEP,SAAU;IAACQ,OAAO,EAAEJ,WAAY;IAAAK,QAAA,GAAC,WAChF,eAAAhB,OAAA,CAACF,eAAe;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEjB,CAAC;AAAAlB,EAAA,CA9BKD,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA+BlB,eAAeA,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}